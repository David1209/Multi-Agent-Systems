to bounce  ;- ball procedure
  ; check: hitting left or right wall?
  ifelse ( [pcolor] of patch-ahead -0.5 = (grey - 0.1) ) [
    ; if so, reflect heading around x axis
    set heading (- heading)   
  ][ if ( [pcolor] of patch-ahead -0.5 = (grey + 0.1) ) [
    ; if so, reflect heading arouny axis
    set heading (180 - heading)
  ]]
end


to setup-beliefs [pos playstyle]  ;-player procedure
  set incoming_messages []
  set outgoing_messages []
  
  set beliefs table:make
 
  table:put beliefs "has-ball" false
  table:put beliefs "team-has-ball" false
  table:put beliefs "oppo-has-ball" false
  table:put beliefs "ball-loc" [0 0]
  table:put beliefs "playstyle" playstyle
  table:put beliefs "own-loc" pos
  table:put beliefs "team-loc" []
  table:put beliefs "oppo-loc" []
end

to-report in [l i] ; returns true if i in l; false o.w.
  let ans false
  foreach l [
    if (? = i) [
      set ans true
    ]
  ]
  report ans
end

to-report playname [p]
  let cteam item 0 p
  let cplay item 1 p
  ifelse (cteam = 1) [ 
    report cplay 
  ][ ;else
    report (num-team1 * 3 + cplay) 
  ]
end

to-report near-goal [which] ;- player function
  ifelse (which = 1) [
    if (ycor >= -15 and ycor <= 15 and xcor <= -38) [
      report true
    ]
  ][ if (which = 2) [
    if (ycor >= -15 and ycor <= 15 and xcor >= 38) [
      report true
    ]
  ]]
  report false
end

to-report on-own-half ; - player function
  ifelse (team = 1) [
    if (xcor < 0) [
      report true
    ]
  ][ ;else
    if (xcor > 0) [
      report true
    ]
  ]
  report false
end

to-report am-i-closest [x y] ;- player function
  let self-loc table:get beliefs "own-loc"
  foreach table:to-list table:get beliefs "team-loc" [
    if ( sqrt ( (x - item 0 item 1 ?) ^ 2 + (y - item 1 item 1 ?) ^ 2 ) < sqrt ( (x - item 0 self-loc) ^ 2 + (y - item 1 self-loc) ^ 2 ) ) [
      report false
    ]
  ]
  report true
end

to kick-ball-player [player p-power] ;- ball function
  facexy [xcor] of player [ycor] of player
  set heading heading - 180
  set speed p-power  
  set at-foot false
end


to kick-ball-xy [x y p-power] ;- ball function
  facexy x y
  set heading heading - 180
  set speed p-power
  set at-foot false
end

to lose-ball ;- player function
  table:put beliefs "has-ball" false
  table:put beliefs "team-has-ball" false
  let message table:make
  table:put message "from" list team who
  table:put message "to" list team "mates"
  table:put message "subject" "ballown"
  table:put message "message" list table:get beliefs "team-has-ball" table:get beliefs "oppo-has-ball"
  set outgoing_messages lput message outgoing_messages
end